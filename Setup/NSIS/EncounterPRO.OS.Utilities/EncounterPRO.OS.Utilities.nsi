; Script generated by the HM NIS Edit Script Wizard.

; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "EncounterPRO-OS Utilities"

; Source Root
!define SOURCE_ROOT "C:\Users\tofft\EncounterPro\Builds"

; Component Versions
!define EncounterPRO_Utilities_VERSION   1.0.2.0
; This has a virus in it
; !define TPS_Foxit_Version 2.3
!define EventLogInstaller_Version 1.2
!define CSharpGACTool_Version 1.0.0.2
!define ICSharpCode_SharpZipLib_Version 0.84.0.0

; Other definitions
!define PRODUCT_VERSION "${EncounterPRO_Utilities_VERSION}"
!define PRODUCT_PUBLISHER "EncounterPRO.ORG"
!define PRODUCT_WEB_SITE "http://www.encounterpro.org"
!define Required_Dotnet_VERSION   'v4.0'

; Module Locations
!define EncounterPRO_Utilities_SOURCE  '${SOURCE_ROOT}\EncounterPRO-OS\EncounterPRO.OS.Utilities\${EncounterPRO_Utilities_VERSION}\Files'
; !define FOXIT_READER_SOURCE "${SOURCE_ROOT}\3rd Party Software\Foxit Reader\${TPS_Foxit_Version}"
!define EVENTLOG_INSTALLER_SOURCE "${SOURCE_ROOT}\EncounterPRO-OS\EncounterPRO.OS.Utilities\EproEventLogInstaller\${EventLogInstaller_Version}"
!define CSharpGACTool_SOURCE "${SOURCE_ROOT}\EncounterPRO-OS\EncounterPRO.OS.Utilities\CSharpGACTool\${CSharpGACTool_Version}"
; !define PS_Distiller_Driver_SOURCE "${SOURCE_ROOT}\3rd Party Software\Adobe\PS Distiller Driver"
!define ICSharpCode_SharpZipLib_SOURCE "${SOURCE_ROOT}\3rd Party Software\ICSharpCode\SharpZipLib\${ICSharpCode_SharpZipLib_Version}"


; Installation constants
!define COMMONFILES_TARGET "EncounterPRO-OS"

; Include install functions
!include "..\plugins\eproinstallfunctions.nsh"

; FileFunc
!include "FileFunc.nsh"
!insertmacro GetFileName
!insertmacro GetFileVersion  

; InstallLib support
!include Library.nsh

; MUI 1.67 compatible ------
!include "MUI.nsh"

; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON "${NSISDIR}\Contrib\Graphics\Icons\modern-install.ico"

    ; Welcome page
;    !insertmacro MUI_PAGE_WELCOME
    ; License page
;    !insertmacro MUI_PAGE_LICENSE "\\techserv\builds\Common Files\Eula.txt"
    
    ; Instfiles page
    !insertmacro MUI_PAGE_INSTFILES
    ; Finish page
;    !insertmacro MUI_PAGE_FINISH

; Language files
!insertmacro MUI_LANGUAGE "English"

; Reserve Files

; MUI end ------

  var NETInstallLoc
  var RunningDotNetVersion
  
;!macro EproGacInstall Assembly
;  File "${Assembly}"
;  ${GetFileName} "${Assembly}" $R0
;  nsExec::Exec '"${gacutil}" /r "$R0"'
;  Pop $0
;  StrCmp $0 "error" 0 +2
;  DetailPrint "Failed to register $R0 in GAC."
;  ; ngen.exe fails to compile if assemblies have dependencies that
;  ; have not yet been installed.  We might re-implement this feature later,
;  ; but for now we will rely on JIT-compiling
;  ;ExecWait '"$WINDIR\Microsoft.NET\Framework\${DotNetVersion}\ngen.exe" "$R0"'
;!macroend

; Mimic installshield setup.ini ProductVersion value
;!appendfile "${PRODUCT_VERSION}\setup.ini" "" ; ensure that setup.ini exists by writing to it
;!delfile "${PRODUCT_VERSION}\setup.ini"       ; so that deleting it will succeed
;!appendfile "${PRODUCT_VERSION}\setup.ini" "[Startup]$\r$\n"
;!appendfile "${PRODUCT_VERSION}\setup.ini" "ProductVersion=${PRODUCT_VERSION}" ; value needed by Epro for auto-upgrade

Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
OutFile "EncounterPRO.OS.Utilities ${EncounterPRO_Utilities_VERSION} Install.exe"
InstallDir "$COMMONFILES\${COMMONFILES_TARGET}\EncounterPRO.OS.Utilities"
ShowInstDetails show
AutoCloseWindow true

  !macro CSharpGacToolInstall Assembly
    nsExec::Exec '"${gacutil}" /r "${Assembly}"'
    Pop $0
    StrCmp $0 "error" 0 +2
    DetailPrint "Failed to register ${Assembly} in GAC."
    ; ngen.exe fails to compile if assemblies have dependencies that
    ; have not yet been installed.  We might re-implement this feature later,
    ; but for now we will rely on JIT-compiling
    ;ExecWait '"$WINDIR\Microsoft.NET\Framework\${DotNetVersion}\ngen.exe" "$R0"'
  !macroend

  !macro REGASM Assembly
    nsExec::Exec '"${regasm}" /codebase /tlb "${Assembly}"'
    Pop $0
    StrCmp $0 "error" 0 +2
    DetailPrint "Failed to register $R0 for COM-Interop."
  !macroend


Function PreInstall
  Call CheckBitness
  ;MessageBox MB_OK "$Bitness bit OS"

  Call getWindowsVersion
  ${If} $WinVer = 'not NT'
      MessageBox MB_OK "This program Windows XP, Windows 2003 or Later.  Setup cannot continue."
      Abort "This program Windows XP, Windows 2003 or Later."
  ${EndIf}
  
  Call isNet40Installed
  Pop $R0
  ${If} $R0 != 'Yes'
      MessageBox MB_YESNO|MB_ICONEXCLAMATION "This program requires the .NET Framework 4.  Do you wish to download the required framework now?" IDYES OpenBrowser4 IDNO GiveUpNow4
      
      OpenBrowser4:
      ${OpenURL} "http://www.microsoft.com/downloads/details.aspx?FamilyID=9cfb2d51-5ff4-4491-b0e5-b386f32c0992&displaylang=en"
      Abort "Please restart setup after installing the .NET Framework 4."
      
      GiveUpNow4:
      Abort "Please install the .NET Framework 4 before running setup again."
  ${EndIf}
  Call CheckIsAdminUser
FunctionEnd

Section "EncounterPRO.OS.Utilities"
  SetOverwrite on

  ; Copy files for Adobe PS Distiller Driver (used for "Sybase Datawindow PS" printer)
  ; SetOutPath "$COMMONFILES\${COMMONFILES_TARGET}\Sybase Datawindow PS"
  ; File "${PS_Distiller_Driver_SOURCE}\*"

  ; Start by making sure that some .Net utilities are installed
      
  ; Get the running .net versoin
  Call GetDotNETVersion
  Pop $RunningDotNetVersion
      
  DetailPrint "$RunningDotNetVersion"

  ; Set the outpath to the windows .Net directory for the running .net version 
  ReadRegStr $NETInstallLoc HKLM "SOFTWARE\Microsoft\.NETFramework" "InstallRoot"
  StrCpy $R9 $NETInstallLoc 1 -1
  StrCmp $R9 "\" 0 +4
  StrLen $R9 $NETInstallLoc
  IntOp $R9 $R9 - 1
  StrCpy $NETInstallLoc $NETInstallLoc $R9
      
  ; Download the utilities if necessary
;  File "${DOTNET_TOOLS_SOURCE}\InstallUtil.exe"
      
  ; Define symbols for the utilities
  !define gacutil "$COMMONFILES\${COMMONFILES_TARGET}\EncounterPRO.OS.Utilities\CSharpGACTool.exe"
  !define regasm "$NETInstallLoc\$RunningDotNetVersion\regasm.exe"
  !define InstallUtil "$NETInstallLoc\$RunningDotNetVersion\InstallUtil.exe"

  SetOutPath "$COMMONFILES\${COMMONFILES_TARGET}\EncounterPRO.OS.Utilities"
  
  ; CSharpGACTool
  File "${CSharpGACTool_SOURCE}\EncounterPRO.OS.CSharpGACTool.exe"

  ; Foxit Reader
  ; File "${FOXIT_READER_SOURCE}\Foxit Reader.exe"
          
  ; Get the EncounterPRO.OS.Utilities files 
  File "${EncounterPRO_Utilities_SOURCE}\EncounterPRO.OS.Utilities.tlb"
  File "${ICSharpCode_SharpZipLib_SOURCE}\ICSharpCode.SharpZipLib.dll"
;  File "${EncounterPRO_Utilities_SOURCE}\ProgressBars.dll"
  File "${EncounterPRO_Utilities_SOURCE}\EncounterPRO.OS.Utilities.dll"
  
  ; Register the assemblies in the GAC
  !insertmacro CSharpGacToolInstall "$$COMMONFILES\${COMMONFILES_TARGET}\EncounterPRO.OS.Utilities\ICSharpCode.SharpZipLib.dll"
;  !insertmacro CSharpGacToolInstall "$$COMMONFILES\${COMMONFILES_TARGET}\EncounterPRO.OS.Utilities\ProgressBars.dll"
  !insertmacro CSharpGacToolInstall "$$COMMONFILES\${COMMONFILES_TARGET}\EncounterPRO.OS.Utilities\EncounterPRO.OS.Utilities.dll"
  
  ; Register the EncounterPRO.OS.Utilities.dll Type Library.  This is needed for 32/64 bit support.
  !insertmacro REGASM "$COMMONFILES\${COMMONFILES_TARGET}\EncounterPRO.OS.Utilities\EncounterPRO.OS.Utilities.dll"

  ; Write the version into EPCompInfo.ini
  ${GetFileVersion} "$COMMONFILES\${COMMONFILES_TARGET}\EncounterPRO.OS.Utilities\EncounterPRO.OS.Utilities.dll" $R0
  WriteINIStr "$COMMONFILES\${COMMONFILES_TARGET}\EPCompInfo.ini" "EncounterPRO.OS.Utilities" "ProductVersion" "$R0"

  ; Install the EncounterPRO Event Log Sources
  File "${EVENTLOG_INSTALLER_SOURCE}\EncounterPRO.OS.EventLogSourceInstaller.dll"
  nsExec::Exec '"${InstallUtil}" "$COMMONFILES\${COMMONFILES_TARGET}\EncounterPRO.OS.Utilities\EPROEventLogInstaller.dll"'
  
SectionEnd

Section '-Post' SecPost
    ; Uninstaller
    WriteUninstaller "$INSTDIR\Uninstall EncounterPRO.OS.Utilities.exe"
SectionEnd

Function .onInit
  Call PreInstall
FunctionEnd

Function un.onInit
    SetShellVarContext all
    Call un.CheckIsAdminUser
    MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "Are you sure you want to completely remove $(^Name)?" IDYES +2
    Abort
FunctionEnd

Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "$(^Name) was successfully removed from your computer."
FunctionEnd

Function GetDotNETVersion
  Push $0
  Push $1

  System::Call "mscoree::GetCORVersion(w .r0, i 1024, *i r2) i .r1"
  StrCmp $1 0 +2
    StrCpy $0 0
  
  Pop $1
  Exch $0
FunctionEnd

