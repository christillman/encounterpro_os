HA$PBExportHeader$f_call_external_source.srf
global type f_call_external_source from function_object
end type

forward prototypes
global function integer f_call_external_source (string ps_external_source, str_attributes pstr_attributes, ref str_external_observation_attachment pstr_attachment)
end prototypes

global function integer f_call_external_source (string ps_external_source, str_attributes pstr_attributes, ref str_external_observation_attachment pstr_attachment);u_component_observation luo_source
str_external_source lstr_external_source
integer li_sts
u_xml_document luo_xml_document

// Find the external source component info
li_sts = common_thread.get_external_source(ps_external_source, lstr_external_source)
if li_sts <= 0 then return li_sts

// Instantiate the component
f_attribute_add_attribute(pstr_attributes, "external_source", lstr_external_source.external_source)
luo_source = component_manager.get_component(lstr_external_source.component_id, pstr_attributes)
if isnull(luo_source) then return -1

li_sts = luo_source.do_source()

if luo_source.observation_count < 1 then return 0

if luo_source.observations[1].attachment_list.attachment_count < 1 then return 0

pstr_attachment = luo_source.observations[1].attachment_list.attachments[1]

component_manager.destroy_component(luo_source)

return 1

end function

