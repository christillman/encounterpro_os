HA$PBExportHeader$f_check_version.srf
global type f_check_version from function_object
end type

forward prototypes
global function integer f_check_version ()
end prototypes

global function integer f_check_version ();str_service_info lstr_service
str_popup popup
integer li_choice
string ls_temp
integer li_sts, i
str_popup_return popup_return
string ls_epro_setup_dir
string ls_epro_setup_prog
u_ds_data luo_components
string ls_component
long ll_count
string ls_myversion
string ls_mybuild
string ls_newversion
string ls_sqlversion
string ls_message
string ls_compinfo
string ls_common_files
unsignedlong ll_ppidl
boolean lb_sts


li_sts = windows_api.shell32.shgetspecialfolderlocation( handle(main_window), &
																windows_api.shell32.CSIDL_COMMONFILES , &
																ll_ppidl)
if li_sts = 0 then
	ls_common_files = space(500)
	lb_sts = windows_api.shell32.shgetpathfromidlist(ll_ppidl, ls_common_files)
	if lb_sts then
		ls_common_files = trim(ls_common_files)
		if right(ls_common_files, 1) <> "\" then ls_common_files += "\"
		ls_compinfo = ls_common_files + "JMJTech Common\EPCompInfo.ini"
	end if
	windows_api.shell32.CoTaskMemFree(ll_ppidl)
end if

if not fileexists(ls_compinfo) then
	ls_compinfo = program_directory + "\EPCompInfo.ini"
end if

f_check_attachment_location(false)
ls_epro_setup_dir = f_default_attachment_path() + "\Install\"
ls_epro_setup_prog = "\Setup.exe /V~"INSTALLDIR=\~""
ls_epro_setup_prog += program_directory + "\~""

ls_sqlversion = string(sqlca.db_script_major_release) + "." + sqlca.db_script_database_version

ls_myversion = string(major_release) + "." + database_version
ls_mybuild = ls_myversion + "." + build

// First see if we're compatible with the database, because we can't run if we're not
if ls_sqlversion <> my_sql_version then
	if cpr_mode = "CLIENT" then
		ls_newversion = profilestring(ls_epro_setup_dir + "EncounterPRO\Setup.ini", "Startup", "ProductVersion", "")
		ls_message = "This EncounterPRO application (" + ls_myversion + ")"
		ls_message += " does not match the database version (" + ls_sqlversion + ")"
		if left(ls_newversion, len(ls_myversion)) = ls_myversion then
			ls_message += ".  An EncounterPRO installation program is available which matches the database version."
			ls_message += "  Click OK to install version " + ls_newversion + " of EncounterPRO."
			li_sts = messagebox("Version Mismatch", ls_message, StopSign!, OKCancel!, 1)
			if li_sts = 1 then
				li_sts = Run(ls_epro_setup_dir + "EncounterPRO" + ls_epro_setup_prog, Normal!)
				Yield()
			end if
		else
			ls_message += " and the correct EncounterPRO installation program does not appear to be available."
			ls_message += "  Please contact your system administrator."
			openwithparm(w_pop_message, ls_message)
			halt close
		end if
	else
		log.log(this, "f_initialize_objects()", "Database Version Mismatch (" + database_version + ", " + string(sqlca.db_script_database_version) + ")", 5)
	end if
	halt close
end if	

CHOOSE CASE cpr_mode
	CASE "CLIENT"
		// Make sure we have the necessary modification level
		if sqlca.modification_level < minimum_modification_level then
			ls_message = "This version of EncounterPRO-OS (" + f_app_version() + ")"
			ls_message += " requires the database to be at modification level " + string(minimum_modification_level)
			ls_message += " or higher.  This database is only at modification level " + string(sqlca.modification_level)
			ls_message += "."
			
			if sqlca.is_dbo_user then
				ls_message += ".  Do you wish to configure the database now?"
				openwithparm(w_pop_yes_no, ls_message)
				popup_return = message.powerobjectparm
				if popup_return.item = "YES" then
					open(w_svc_config_database)
				end if
			else
				ls_message += ".  You must be an administrator to configure the database."
				openwithparm(w_pop_message, ls_message)
			end if
			
			halt close
		end if
	CASE "SERVER"
		if sqlca.modification_level < minimum_modification_level then
			ls_message = "This version of EncounterPRO (" + f_app_version() + ")"
			ls_message += " requires the database to be at modification level " + string(minimum_modification_level)
			ls_message += " or higher.  This database is only at modification level " + string(sqlca.modification_level)
			ls_message += ".  Please contact your system administrator or JMJ Technical Support for assistance."
			log.log(this, "f_check_version()", ls_message, 5)
			halt close
		end if
	CASE ELSE
END CHOOSE


return 1
end function

