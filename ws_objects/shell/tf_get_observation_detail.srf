HA$PBExportHeader$tf_get_observation_detail.srf
global type tf_get_observation_detail from function_object
end type

forward prototypes
global function integer tf_get_observation_detail (string ps_observation_id, ref string ps_observation_type, ref string ps_type_description, ref string ps_observation_category_id, ref string ps_cat_description, ref string ps_description, ref string ps_collection_flag, ref string ps_collection_procedure_id, ref string ps_perform_flag, ref string ps_perform_procedure_id, ref string ps_perform_location_domain, ref string ps_collection_location_domain)
end prototypes

global function integer tf_get_observation_detail (string ps_observation_id, ref string ps_observation_type, ref string ps_type_description, ref string ps_observation_category_id, ref string ps_cat_description, ref string ps_description, ref string ps_collection_flag, ref string ps_collection_procedure_id, ref string ps_perform_flag, ref string ps_perform_procedure_id, ref string ps_perform_location_domain, ref string ps_collection_location_domain);string ls_observation_type
string ls_type_description
string ls_observation_category_id
string ls_cat_description
string ls_description
string ls_collection_flag
string ls_collection_procedure_id
string ls_perform_flag
string ls_perform_procedure_id
string ls_perform_location_domain
string ls_collection_location_domain
integer li_sts

tf_begin_transaction(this, "tf_get_observation_detail()")

  SELECT c_Observation.observation_type,   
  			c_Observation_Type.description,
         c_Observation.observation_category_id,   
			c_Observation_Category.description,
         c_Observation.description,
         c_Observation.collection_flag,
         c_Observation.collection_procedure_id,
         c_Observation.perform_flag,
         c_Observation.perform_procedure_id,
         c_Observation.perform_location_domain,
         c_Observation.collection_location_domain
    INTO :ls_observation_type,   
	 		:ls_type_description,
         :ls_observation_category_id,   
	 		:ls_cat_description,
         :ls_description,
         :ls_collection_flag,
         :ls_collection_procedure_id,
         :ls_perform_flag,
         :ls_perform_procedure_id,
         :ls_perform_location_domain,
         :ls_collection_location_domain
    FROM c_Observation,
	 		c_Observation_Type,
			c_Observation_Category
   WHERE c_Observation.observation_id = :ps_observation_id
	AND	c_Observation.observation_type = c_Observation_Type.observation_type
	AND	c_Observation.observation_type = c_Observation_Category.observation_type
	AND	c_Observation.observation_category_id = c_Observation_Category.observation_category_id;


if not tf_check() then return -1

if sqlca.sqlcode = 100 then
	li_sts = 0
else
	li_sts = 1
end if

tf_commit()

if li_sts = 1 then
	ps_observation_type = ls_observation_type
	ps_type_description = ls_type_description
	ps_observation_category_id = ls_observation_category_id
	ps_cat_description = ls_cat_description
	ps_description = ls_description
	ps_collection_flag = ls_collection_flag
	ps_collection_procedure_id = ls_collection_procedure_id
	ps_perform_flag = ls_perform_flag
	ps_perform_procedure_id = ls_perform_procedure_id
	ps_perform_location_domain = ls_perform_location_domain
	ps_collection_location_domain = ls_collection_location_domain
end if

return li_sts

end function

