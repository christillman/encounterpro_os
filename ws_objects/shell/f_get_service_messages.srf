HA$PBExportHeader$f_get_service_messages.srf
global type f_get_service_messages from function_object
end type

forward prototypes
global function string f_get_service_messages (long pl_patient_workplan_item_id, boolean pb_chronological_order)
end prototypes

global function string f_get_service_messages (long pl_patient_workplan_item_id, boolean pb_chronological_order);string ls_all_messages
string ls_message_from_user_id
datetime ldt_message_date_time
string ls_message_type
string ls_message
string ls_message_subject
string ls_forwarded_to_user_id
string ls_forwarded_to_user_name
string ls_temp
string ls_user_tag
long i
u_ds_data luo_data
long ll_count
long ll_index

luo_data = CREATE u_ds_data

ls_all_messages = ""
luo_data.set_dataobject("dw_jmj_task_messages")
ll_count = luo_data.retrieve(pl_patient_workplan_item_id)
for ll_index = 1 to ll_count
	if pb_chronological_order then
		i = ll_index
	else
		i = ll_count - ll_index + 1
	end if
	ls_message_from_user_id = luo_data.object.message_from_user_id[i]
	ldt_message_date_time = luo_data.object.message_date_time[i]
	ls_message_type = luo_data.object.message_type[i]
	ls_message = luo_data.object.message[i]
	ls_message_subject = luo_data.object.message_subject[i]
	ls_forwarded_to_user_id = luo_data.object.forwarded_to_user_id[i]

	ls_temp = ""
	
	if left(lower(ls_message_type), 6) = "closed" then
		ls_temp += ls_message_type + ": " + user_list.user_full_name(ls_message_from_user_id)
		ls_temp += "   " +  string(ldt_message_date_time)
		if len(ls_message) > 0 then
			ls_temp += "~r~n" + "Comment: " + ls_message
		end if
	else
		// Create string for this message
		ls_user_tag = user_list.user_full_name(ls_message_from_user_id)
		if isnull(ls_user_tag) or trim(ls_user_tag) = "" then
			ls_user_tag = "<Unknown>"
		end if
		
		ls_temp += "From: " + ls_user_tag + "   " +  string(ldt_message_date_time)
	
		if len(ls_forwarded_to_user_id) > 0 then
			ls_forwarded_to_user_name = user_list.user_full_name(ls_forwarded_to_user_id)
			if len(ls_forwarded_to_user_name) > 0 then
				ls_temp += "~r~n" + ls_message_type + ": " + ls_forwarded_to_user_name
			end if
		end if
		
		if len(ls_message_subject) > 0 then
			ls_temp += "~r~n" + "Subject: " + ls_message_subject
		end if
		
		if len(ls_message) > 0 then
			ls_temp += "~r~n" + "Message: " + ls_message
		end if
	end if
	
	if isnull(ls_temp) or trim(ls_temp) = "" then continue
	
	if len(ls_all_messages) > 0 then
		ls_all_messages += "~r~n~r~n"
	end if
	ls_all_messages += ls_temp
next

DESTROY luo_data

return ls_all_messages


end function

