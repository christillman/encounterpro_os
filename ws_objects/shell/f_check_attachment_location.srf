HA$PBExportHeader$f_check_attachment_location.srf
global type f_check_attachment_location from function_object
end type

forward prototypes
global function integer f_fix_attachment_location (boolean pb_autorepair)
global function integer f_check_attachment_location (boolean pb_autorepair)
end prototypes

global function integer f_fix_attachment_location (boolean pb_autorepair);boolean lb_exists
string ls_path
long ll_attachment_location_id
string ls_attachment_server
string ls_attachment_share

SELECT min(attachment_location_id)
INTO :ll_attachment_location_id
FROM c_Attachment_Location;
if not tf_check() then return -1
if isnull(ll_attachment_location_id) then return -1

SELECT attachment_server, attachment_share
INTO :ls_attachment_server, :ls_attachment_share
FROM c_Attachment_Location
WHERE attachment_location_id = :ll_attachment_location_id;
if not tf_check() then return -1
if sqlca.sqlcode = 100 then return -1

ls_path = "\\" + ls_attachment_server + "\" + ls_attachment_share

lb_exists = log.of_directoryexists(ls_path)
if lb_exists then return 1

// If we're not supposed to repair it then return 0
if not pb_autorepair then return 0

// Try the default path
ls_attachment_share = "CPRFILES-" + sqlca.database
ls_path = "\\" + sqlca.servername + "\" + ls_attachment_share

lb_exists = log.of_directoryexists(ls_path)
if lb_exists then
	UPDATE c_Attachment_Location
	SET attachment_server = :sqlca.servername,
		attachment_share = :ls_attachment_share
	WHERE attachment_location_id = :ll_attachment_location_id;
	if not tf_check() then return -1
	return 1
end if
		
return 0

end function

global function integer f_check_attachment_location (boolean pb_autorepair);boolean lb_exists
string ls_path
long ll_attachment_location_id
long ll_sort_sequence
string ls_attachment_server
string ls_attachment_share


SELECT attachment_server, attachment_share
INTO :object_file_server, :object_file_path
FROM dbo.fn_attachment_location(NULL);
if not tf_check() then return -1
if sqlca.sqlcode = 100 then return -1

ls_path = f_default_attachment_path()

lb_exists = log.of_directoryexists(ls_path)
if lb_exists then return 1

return 0

end function

