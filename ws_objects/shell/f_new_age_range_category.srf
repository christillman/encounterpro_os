HA$PBExportHeader$f_new_age_range_category.srf
global type f_new_age_range_category from function_object
end type

forward prototypes
global function string f_new_age_range_category ()
end prototypes

global function string f_new_age_range_category ();str_popup popup
str_popup_return popup_return
long ll_sts
long ll_count
//u_ds_data luo_data
string ls_age_range_category
string ls_null
string ls_overlap_flag
int ll_sort_sequence

setnull(ls_null)

DO WHILE true
	popup.title = "Enter the name of the new Age Range Category"
	popup.displaycolumn = 24
	openwithparm(w_pop_prompt_string, popup)
	popup_return = message.powerobjectparm
	if popup_return.item_count <> 1 then return ls_null
	
	ls_age_range_category = popup_return.items[1]
	
	SELECT count(*)
	INTO :ll_count
	FROM c_Age_Range_Category
	WHERE age_range_category = :ls_age_range_category;
	if not tf_check() then return ls_null
	if ll_count > 0 then
		openwithparm(w_pop_message, "There is already an Age Range Category with that name.  Please enter a different Age Range Category")
	else
		exit
	end if
LOOP

openwithparm(w_pop_yes_no, "Allow Age Ranges To Overlap?")
popup_return = message.powerobjectparm
if popup_return.item = "YES" then
	ls_overlap_flag = "Y"
else
	ls_overlap_flag = "N"
end if

SELECT max(sort_sequence)
INTO :ll_sort_sequence
FROM dbo.c_Age_Range_Category;
if not tf_check() then return ls_null

if isnull(ll_sort_sequence) then
	ll_sort_sequence = 1
else
	ll_sort_sequence = ll_sort_sequence + 1
end if

INSERT INTO dbo.c_Age_Range_Category (
	age_range_category,
	overlap_flag,
	sort_sequence,
	owner_id,
	status)
VALUES (
	:ls_age_range_category,
	:ls_overlap_flag,
	:ll_sort_sequence,
	:sqlca.customer_id,
	'OK');
if not tf_check() then return ls_null

return ls_age_range_category

end function

