HA$PBExportHeader$f_resize_objects.srf
global type f_resize_objects from function_object
end type

forward prototypes
global function integer f_resize_objects (windowobject poa_control[], real pr_x_factor, real pr_y_factor, boolean pb_zoom_dw, boolean pb_nested_userobjects)
end prototypes

global function integer f_resize_objects (windowobject poa_control[], real pr_x_factor, real pr_y_factor, boolean pb_zoom_dw, boolean pb_nested_userobjects);long i
dragobject dobj
line ln
rectangle rect
datawindow dw
picturebutton pb
userobject uobj
tab tab

for i = 1 to upperbound(poa_control)
	CHOOSE CASE poa_control[i].typeof()
		CASE line!
			ln = poa_control[i]
			ln.beginx *= pr_x_factor
			ln.beginy *= pr_y_factor
			ln.endx *= pr_x_factor
			ln.endy *= pr_y_factor
		CASE rectangle!
			rect = poa_control[i]
			rect.x *= pr_x_factor
			rect.y *= pr_y_factor
			rect.width *= pr_x_factor
			rect.height *= pr_y_factor
		CASE datawindow! // datawindows can get zoomed
			dw = poa_control[i]
			dw.x *= pr_x_factor
			dw.y *= pr_y_factor
			dw.width *= pr_x_factor
			dw.height *= pr_y_factor
			// Do the zoom
			if pb_zoom_dw then
				dw.Object.DataWindow.zoom = string(int(pr_x_factor*100)) 
			end if
		CASE picturebutton!
			pb = poa_control[i]
			pb.x *= pr_x_factor
			pb.y *= pr_y_factor
			pb.width *= pr_x_factor
			pb.height *= pr_y_factor
			pb.originalsize = false
		CASE tab!
			// First, resize the object
			tab = poa_control[i]
			tab.x *= pr_x_factor
			tab.y *= pr_y_factor
			tab.width *= pr_x_factor
			tab.height *= pr_y_factor
			
			if pb_nested_userobjects then
				f_resize_objects(tab.control, pr_x_factor, pr_y_factor, pb_zoom_dw, pb_nested_userobjects)
			end if
		CASE userobject!
			// First, resize the object
			uobj = poa_control[i]
			uobj.x *= pr_x_factor
			uobj.y *= pr_y_factor
			uobj.width *= pr_x_factor
			uobj.height *= pr_y_factor
			
			if pb_nested_userobjects then
				f_resize_objects(uobj.control, pr_x_factor, pr_y_factor, pb_zoom_dw, pb_nested_userobjects)
			end if
		CASE ELSE
			dobj = poa_control[i]
			dobj.x *= pr_x_factor
			dobj.y *= pr_y_factor
			dobj.width *= pr_x_factor
			dobj.height *= pr_y_factor
	END CHOOSE
next

return 1

end function

