HA$PBExportHeader$f_check_in_config_object_silent.srf
global type f_check_in_config_object_silent from function_object
end type

forward prototypes
global function integer f_check_in_config_object_silent (ref str_config_object_info pstr_config_object, string ps_version_description)
end prototypes

global function integer f_check_in_config_object_silent (ref str_config_object_info pstr_config_object, string ps_version_description);integer li_sts
long ll_sts
blob lbl_objectdata
u_component_config_object luo_config_object

if isnull(pstr_config_object.object_component_id) then
	log.log(this, "f_check_in_config_object_silent()", "This type of config object (" + pstr_config_object.config_object_type + ") does not have a component specified in c_Config_Object_Type.object_component_id.", 4)
	return -1
end if

luo_config_object = component_manager.get_component(pstr_config_object.object_component_id)
if isnull(luo_config_object) then
	log.log(this, "f_check_in_config_object_silent()", "Error getting config object component (" + pstr_config_object.object_component_id + ")", 4)
	return -1
end if

// Checkin the version
setnull(lbl_objectdata)
ll_sts =  sqlca.config_checkin(pstr_config_object.config_object_id, ps_version_description, lbl_objectdata, current_user.user_id)
if not tf_check() then return -1
if ll_sts < 0 then
	log.log(this, "f_check_in_config_object_silent()", "Error checking in config object (" + string(ll_sts) + ")", 4)
	return -1
end if

li_sts = luo_config_object.encapsulate(pstr_config_object, lbl_objectdata)
if ll_sts < 0 then
	log.log(this, "f_check_in_config_object_silent()", "Error encapsulating config object (" + pstr_config_object.config_object_id + ")", 4)
	return -1
end if


if isnull(lbl_objectdata) then
	log.log(this, "f_check_in_config_object()", "No data returned from config object encoder", 4)
	UPDATE c_Config_Object_Version
	SET status = 'CheckedOut'
	WHERE config_object_id = :pstr_config_object.config_object_id
	AND version = :pstr_config_object.installed_version;
	if not tf_check() then return -1
	return -1
end if


// Update the version
UPDATEBLOB c_Config_Object_Version
SET objectdata = :lbl_objectdata
WHERE config_object_id = :pstr_config_object.config_object_id
AND version = :pstr_config_object.installed_version;
if not tf_check() then return -1
if sqlca.sqlnrows <> 1 then
	log.log(this, "f_check_in_config_object()", "Version record not found (" + pstr_config_object.config_object_id + ", " + string(pstr_config_object.installed_version) + ")", 4)
	UPDATE c_Config_Object_Version
	SET status = 'CheckedOut'
	WHERE config_object_id = :pstr_config_object.config_object_id
	AND version = :pstr_config_object.installed_version;
	if not tf_check() then return -1
	return -1
end if

// Refresh the config object structure
ll_sts = f_get_config_object_info(pstr_config_object.config_object_id, pstr_config_object)
if ll_sts <= 0 then
	log.log(this, "f_check_in_config_object()", "Error refreshing config object structure", 4)
	return -1
end if

component_manager.destroy_component(luo_config_object)

return 1


end function

