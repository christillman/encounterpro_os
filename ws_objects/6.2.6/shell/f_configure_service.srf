HA$PBExportHeader$f_configure_service.srf
global type f_configure_service from function_object
end type

forward prototypes
global function integer f_configure_service (string ps_service, string ps_specialty_id, string ps_context_object)
end prototypes

global function integer f_configure_service (string ps_service, string ps_specialty_id, string ps_context_object);str_attributes lstr_attributes
integer li_sts
u_ds_data luo_data
integer li_count
integer i
integer li_attribute_sequence
string ls_temp
string ls_id
str_attributes lstr_state_attributes
string ls_param_mode

ls_param_mode = "Config"

if isnull(ps_service) then
	log.log(this, "f_configure_service()", "Null Service", 4)
	return -1
end if

SELECT CAST(id AS varchar(38))
INTO :ls_id
FROM o_Service
WHERE service = :ps_service;
if not tf_check() then return -1
if sqlca.sqlcode = 100 then
	log.log(this, "f_configure_service()", "Service not found (" + ps_service + ")", 4)
	return -1
end if

if li_sts = 0 and not f_any_params(ls_id, ls_param_mode) then
	openwithparm(w_pop_message, "This service has no ~"" + ls_param_mode + "~" parameters")
	return 0
end if

// Get the existing attributes
luo_data = CREATE u_ds_data
luo_data.set_dataobject("dw_o_service_attribute")
li_count = luo_data.retrieve(ps_service, ps_specialty_id)

if li_count < 0 then
	log.log(this, "configure_report()", "Error getting attributes", 4)
	return -1
end if

f_attribute_ds_to_str(luo_data, lstr_attributes)

// Add the config object to the state attributes
f_attribute_add_attribute(lstr_state_attributes, "context_object", ps_context_object)
f_attribute_add_attribute(lstr_state_attributes, "parent_config_object_id", ls_id)

li_sts = f_get_params_with_state(ls_id, ls_param_mode, lstr_attributes, lstr_state_attributes)
if li_sts < 0 then return -1

// Transfer the attributes back into the datawindow
f_attribute_str_to_ds_with_removal(lstr_attributes, luo_data)

// Make sure each row has the correct specialty_id
for i = 1 to luo_data.rowcount()
	luo_data.object.service[i] = ps_service
	luo_data.object.user_id[i] = ps_specialty_id
next

li_sts = luo_data.update()
if li_sts < 0 then return -1

DESTROY luo_data			

return 1


end function

