HA$PBExportHeader$f_show_window.srf
global type f_show_window from function_object
end type

forward prototypes
global function integer f_show_window (long pl_handle)
end prototypes

global function integer f_show_window (long pl_handle);long ll_flags
long ll_sts

//#define SWP_NOSIZE          0x0001
//#define SWP_NOMOVE          0x0002
//#define SWP_NOZORDER        0x0004
//#define SWP_NOREDRAW        0x0008
//#define SWP_NOACTIVATE      0x0010 = 16
//#define SWP_FRAMECHANGED    0x0020 = 32 /* The frame changed: send WM_NCCALCSIZE */
//#define SWP_SHOWWINDOW      0x0040 = 64
//#define SWP_HIDEWINDOW      0x0080 = 128
//#define SWP_NOCOPYBITS      0x0100 = 256
//#define SWP_NOOWNERZORDER   0x0200 = 512 /* Don't do owner Z ordering */
//#define SWP_NOSENDCHANGING  0x0400 = 1024 /* Don't send WM_WINDOWPOSCHANGING */
//
//#define SWP_DRAWFRAME       SWP_FRAMECHANGED
//#define SWP_NOREPOSITION    SWP_NOOWNERZORDER
//
//#if(WINVER >= 0x0400)
//#define SWP_DEFERERASE      0x2000
//#define SWP_ASYNCWINDOWPOS  0x4000
//#endif /* WINVER >= 0x0400 */
//
//
//#define HWND_TOP        ((HWND)0)
//#define HWND_BOTTOM     ((HWND)1)
//#define HWND_TOPMOST    ((HWND)-1)
//#define HWND_NOTOPMOST  ((HWND)-2)


//ll_flags = SWP_NOSIZE Or SWP_NOSENDCHANGING Or SWP_SHOWWINDOW Or SWP_NOMOVE Or SWP_NOACTIVATE
ll_flags = 1 + 1024 + 64 + 2 + 16

// Set window to top
ll_sts = SetWindowPos(pl_handle, 0, 0, 0, 0, 0, ll_flags)

return ll_sts

end function

