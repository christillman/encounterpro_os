HA$PBExportHeader$f_get_param_list_old.srf
global type f_get_param_list_old from function_object
end type

forward prototypes
global function integer f_get_param_list_old (ref str_params pstr_params)
end prototypes

global function integer f_get_param_list_old (ref str_params pstr_params);///////////////////////////////////////////////////////////////////////////////////////////
//
//	Return: Integer [ 0 - User pressed 'Cancel' , 1 - success , -1 - Failure ]
//
//	Description: Present a wizard to enable user to enter param values.
//             
//	Returns:		-1 = Error or User pressed cancel
//					 0 = No params for this ID
//					 1 = Success
//
// Created By:Sumathi Chinnasamy										Creation dt: 10/01/99
//
// Modified By:															Modified On:
////////////////////////////////////////////////////////////////////////////////////////////
Integer				i
string ls_config_object_description
string ls_component_id
str_params lstr_component_params

ls_config_object_description = sqlca.fn_config_object_description(pstr_params.id)
pstr_params.param_count = 0

// Get the list of params directly associated with this id
lstr_component_params = f_get_component_params(pstr_params.id, pstr_params.param_mode)

// populate the params array for the wizzard
for i = 1 to lstr_component_params.param_count
	pstr_params.param_count += 1
	pstr_params.params[pstr_params.param_count] = lstr_component_params.params[i]
next

// If this is a report then add the params for the report component
if lower(left(ls_config_object_description, 4)) = "rpt:" then
	SELECT CAST(id AS varchar(38))
	INTO :ls_component_id
	FROM c_Report_Definition
	WHERE report_id = :pstr_params.id;
	if not tf_check() then return -1
	if sqlca.sqlcode = 100 then return pstr_params.param_count
	
	lstr_component_params = f_get_component_params(ls_component_id, pstr_params.param_mode)
	
	// Add the report component params
	for i = 1 to lstr_component_params.param_count
		pstr_params.param_count += 1
		pstr_params.params[pstr_params.param_count] = lstr_component_params.params[i]
	next
end if

return pstr_params.param_count


end function

