HA$PBExportHeader$f_new_component.srf
global type f_new_component from function_object
end type

forward prototypes
global function string f_new_component (string ps_component_type)
end prototypes

global function string f_new_component (string ps_component_type);str_popup popup
str_popup popup2
str_popup popup3
str_popup_return popup_return
string ls_consultant_id
long ll_row
integer li_sts
string ls_description
long ll_nextkey
string ls_null
long ll_count
long ll_iterations
string ls_component_id
string ls_system_id
string ls_system_type
string ls_system_category
string ls_license_status
string ls_component_install_type

setnull(ls_null)

if isnull(ps_component_type) or ps_component_type = "" then
	popup.title = "Select component type"
	popup.dataobject = "dw_c_component_type_pick"
	popup.datacolumn = 1
	popup.displaycolumn = 2
	openwithparm(w_pop_pick, popup)
	popup_return = message.powerobjectparm
	if popup_return.item_count <> 1 then return ls_null

	ps_component_type = popup_return.items[1]
end if

if isnull(ps_component_type) or trim(ps_component_type) = "" then return ls_null

DO WHILE true
	popup2.title = "Enter component name"
	openwithparm(w_pop_prompt_string, popup2)
	popup_return = message.powerobjectparm
	if popup_return.item_count <> 1 then return ls_null
	
	ls_description = trim(popup_return.items[1])
	if ls_description = "" then return ls_null
	
	SELECT count(*)
	INTO :ll_count
	FROM dbo.fn_components()
	WHERE description = :ls_description
	AND status = 'OK';
	if not tf_check() then return ls_null
	
	IF ll_count = 0 then exit
	
	openwithparm(w_pop_message, "There is already a component with that description.. Please enter a different description.")
LOOP

ll_iterations = 0
DO WHILE true
	ll_iterations += 1
	if ll_iterations = 1000 then return ls_null
	
	sqlca.sp_get_next_key("!CPR", "COMPONENT_ID", ll_nextkey)
	if not tf_check() then return ls_null

	ls_component_id = string(sqlca.customer_id) + "^" + string(ll_nextkey)
	
	SELECT count(*)
	INTO :ll_count
	FROM dbo.fn_components()
	WHERE component_id = :ls_component_id;
	if not tf_check() then return ls_null
	
	IF ll_count = 0 then exit
LOOP

ls_system_id = ls_component_id
ls_system_type = "ClientModule"
ls_system_category = ps_component_type + " Component"
ls_component_install_type = "Client"
ls_license_status = "Unlicensed"

INSERT INTO dbo.c_Component_Definition (
	component_id
	,component_type
	,system_id
	,system_type
	,system_category
	,component_install_type
	,component
	,description
	,license_status
	,id
	,status
	,owner_id
	,created
	,last_updated )
VALUES (
	:ls_component_id,
	:ps_component_type,
	:ls_system_id,
	:ls_system_type,
	:ls_system_category,
	:ls_component_install_type,
	:ps_component_type,
	:ls_description,
	:ls_license_status,
	newid(),
	'OK',
	:sqlca.customer_id,
	getdate(),
	getdate() );
if not tf_check() then return ls_null

return ls_component_id

end function

