HA$PBExportHeader$f_get_component_params.srf
global type f_get_component_params from function_object
end type

forward prototypes
global function str_params f_get_component_params (string ps_id, string ps_param_mode)
end prototypes

global function str_params f_get_component_params (string ps_id, string ps_param_mode);Integer				i, j
u_ds_data			luo_params
Long					ll_rowcount
long ll_row
string ls_find
string ls_attribute
string ls_value
str_attributes lstr_attributes
string ls_message
str_params lstr_params
string ls_config_object_description

lstr_params.id = ps_id
lstr_params.param_mode = ps_param_mode
lstr_params.param_count = 0

ls_config_object_description = sqlca.fn_config_object_description(ps_id)

luo_params = Create u_ds_data
luo_params.set_dataobject("dw_component_param_list")
lstr_params.param_count = luo_params.Retrieve(lstr_params.id, lstr_params.param_mode)

// If error then return error
If lstr_params.param_count < 0 Then
	DESTROY luo_params
	Return lstr_params
end if

// Get the current context to sub into the query string
lstr_attributes = f_get_context_attributes()

// populate the params array for the wizzard
for i = 1 to lstr_params.param_count
	lstr_params.params[i].id = ps_id
	lstr_params.params[i].param_mode = ps_param_mode
	lstr_params.params[i].param_sequence = luo_params.object.param_sequence[i]
	lstr_params.params[i].param_class = luo_params.object.param_class[i]
	lstr_params.params[i].param_title = luo_params.object.param_title[i]
	lstr_params.params[i].token1 = luo_params.object.token1[i]
	lstr_params.params[i].token2 = luo_params.object.token2[i]
	lstr_params.params[i].token3 = luo_params.object.token3[i]
	lstr_params.params[i].token4 = luo_params.object.token4[i]
	lstr_params.params[i].initial1 = luo_params.object.initial1[i]
	lstr_params.params[i].initial2 = luo_params.object.initial2[i]
	lstr_params.params[i].initial3 = luo_params.object.initial3[i]
	lstr_params.params[i].initial4 = luo_params.object.initial4[i]
	lstr_params.params[i].helptext = luo_params.object.helptext[i]
	lstr_params.params[i].required_flag = luo_params.object.required_flag[i]
	lstr_params.params[i].query = f_string_substitute_attributes(luo_params.object.query[i], lstr_attributes)
	lstr_params.params[i].config_object_description = ls_config_object_description
next

DESTROY luo_params

if lstr_params.param_count = 0 and config_mode then
	if lower(lstr_params.param_mode) <> "runtime" &
		OR datalist.get_preference_boolean("PREFERENCES", "show_empty_runtime_params", false) then
		ls_message = "This screen is a placeholder for the selected config object which has no params defined."
		ls_message += "  Click the config id box below to define params for this config object."
		ls_message += "  This screen will show only in configuration mode."
		lstr_params.param_count = 1
		lstr_params.params[i].id = lstr_params.id
		lstr_params.params[i].param_mode = lstr_params.param_mode
		lstr_params.params[i].param_sequence = 0
		lstr_params.params[1].param_class = "u_param_noop"
		lstr_params.params[i].param_title = ""
		setnull(lstr_params.params[i].token1)
		setnull(lstr_params.params[i].token2)
		setnull(lstr_params.params[i].token3)
		setnull(lstr_params.params[i].token4)
		setnull(lstr_params.params[i].initial1)
		setnull(lstr_params.params[i].initial2)
		setnull(lstr_params.params[i].initial3)
		setnull(lstr_params.params[i].initial4)
		lstr_params.params[i].helptext = ls_message
		lstr_params.params[i].required_flag = "N"
		lstr_params.params[i].query = ""
		lstr_params.params[i].config_object_description = sqlca.fn_config_object_description(lstr_params.id)
	end if
end if

return lstr_params


end function

