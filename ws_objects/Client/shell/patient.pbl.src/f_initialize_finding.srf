$PBExportHeader$f_initialize_finding.srf
global type f_initialize_finding from function_object
end type

forward prototypes
global subroutine f_initialize_finding (ref str_finding_item pstr_finding)
end prototypes

global subroutine f_initialize_finding (ref str_finding_item pstr_finding);
if not isnull(current_patient) and isvalid(current_patient) then
	pstr_finding.cpr_id = current_patient.cpr_id
	if isnull(current_patient.open_encounter) then
		setnull(pstr_finding.encounter_id)
	else
		pstr_finding.encounter_id = current_patient.open_encounter.encounter_id
	end if
else
	setnull(pstr_finding.cpr_id)
	setnull(pstr_finding.encounter_id)
end if

setnull(pstr_finding.finding_list)

setnull(pstr_finding.finding_sequence)
setnull(pstr_finding.medcinid)
setnull(pstr_finding.prefix)
setnull(pstr_finding.nodekey)
setnull(pstr_finding.positive)
setnull(pstr_finding.description)
setnull(pstr_finding.termtype)
setnull(pstr_finding.flags)
setnull(pstr_finding.eflags)
setnull(pstr_finding.subs)
setnull(pstr_finding.calculateddx)
setnull(pstr_finding.aflags)
setnull(pstr_finding.caflags)
setnull(pstr_finding.qflags)
setnull(pstr_finding.nodelevel)
setnull(pstr_finding.modifier)
setnull(pstr_finding.status)
setnull(pstr_finding.result)
setnull(pstr_finding.icd5th)
setnull(pstr_finding.cptmod)
setnull(pstr_finding.onset)
setnull(pstr_finding.duration)
setnull(pstr_finding.result_amount)
setnull(pstr_finding.result_unit)
setnull(pstr_finding.result_qualifier)
setnull(pstr_finding.scale)
setnull(pstr_finding.comments)
setnull(pstr_finding.attachment_id)

end subroutine

