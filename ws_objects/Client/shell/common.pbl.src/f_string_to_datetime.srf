$PBExportHeader$f_string_to_datetime.srf
global type f_string_to_datetime from function_object
end type

forward prototypes
global function datetime f_string_to_datetime (string ps_string)
end prototypes

global function datetime f_string_to_datetime (string ps_string);string ls_date
string ls_time
datetime ldt_datetime

if isnull(ps_string) then
	setnull(ldt_datetime)
	return ldt_datetime
end if

f_split_string(ps_string, " ", ls_date, ls_time)
ls_date = trim(ls_date)
ls_time = trim(ls_time)

if not isdate(ls_date) and not istime(ls_time) then
	// See if the string is an interval
	if isnumber(ls_date) and len(ls_time) > 0 then
		// If it looks like an interval, then assume it's a difference before the
		// current date/time
		return f_add_datetime_interval(datetime(today(), now()), ps_string, false)
	end if
	setnull(ldt_datetime)
	return ldt_datetime
end if

if not isdate(ls_date) then
	ldt_datetime = datetime(time(ls_time))
	return ldt_datetime
end if

if not istime(ls_time) then
	ldt_datetime = datetime(date(ls_date))
	return ldt_datetime
end if

ldt_datetime = datetime(date(ls_date),time(ls_time))
return ldt_datetime

	
end function

