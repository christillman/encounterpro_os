$PBExportHeader$f_config_object_install_comobjmgr.srf
global type f_config_object_install_comobjmgr from function_object
end type

forward prototypes
global function integer f_config_object_install_comobjmgr (string ps_config_object_id, long pl_version)
end prototypes

global function integer f_config_object_install_comobjmgr (string ps_config_object_id, long pl_version);long ll_sts
u_config_object_manager lo_config_object_manager
string ls_config_object_id
str_config_object_info lstr_config_object_info
integer li_sts
blob lbl_objectdata
string ls_object_xml
string ls_description

if isnull(ps_config_object_id) then
	log.log(po_null, "f_config_object_install_comobjmgr:0011", "config_object_id is null", 4)
	return -1
end if

if isnull(pl_version) then
	log.log(po_null, "f_config_object_install_comobjmgr:0016", "Version is null", 4)
	return -1
end if

SELECT description
INTO :ls_description
FROM c_Config_Object
WHERE config_object_id = :ps_config_object_id;
if not tf_check() then return -1
if sqlca.sqlnrows <> 1 then
	log.log(po_null, "f_config_object_install_comobjmgr:0026", "Config Object record not found (" + ps_config_object_id + ")", 4)
	return -1
end if

// Get the object data
SELECTBLOB objectdata
INTO :lbl_objectdata
FROM c_Config_Object_Version
WHERE config_object_id = :ps_config_object_id
AND version = :pl_version;
if not tf_check() then return -1
if sqlca.sqlnrows <> 1 then
	log.log(po_null, "f_config_object_install_comobjmgr:0038", "Version record not found (" + ps_config_object_id + ", " + string(pl_version) + ")", 4)
	return -1
end if
if isnull(lbl_objectdata) then
	log.log(po_null, "f_config_object_install_comobjmgr:0042", "Null object data (" + ps_config_object_id + ", " + string(pl_version) + ")", 4)
	return -1
end if

ls_object_xml = f_blob_to_string(lbl_objectdata)

// Post the object data
lo_config_object_manager = CREATE u_config_object_manager

ll_sts = lo_config_object_manager.initialize_com()
if ll_sts <= 0 then
	log.log(po_null, "f_config_object_install_comobjmgr:0053", "Error initializing COM object", 4)
	return -1
end if

TRY
	ls_config_object_id = lo_config_object_manager.ImportConfigObject2(ls_object_xml, ps_config_object_id, pl_version)
CATCH (oleruntimeerror lt_error)
	log.log(po_null, "f_config_object_install_comobjmgr:0060", "Error calling ImportConfigObject ~r~n" + lt_error.text + "~r~n" + lt_error.description, 4)
	return -1
END TRY

lo_config_object_manager.disconnectobject()
DESTROY lo_config_object_manager

if isnull(ls_config_object_id) or len(ls_config_object_id) = 0 then
	log.log(po_null, "f_config_object_install_comobjmgr:0068", "No Config Object ID returned from ImportConfigObject()", 4)
	return -1
end if

// Finally, the config object manager will overwrite the new name with the old name in the case of copied objects, so issue a rename just to be sure the names are all correct
sqlca.config_rename_object(ps_config_object_id,ls_description)
if not tf_check() then return -1

return 1

end function

