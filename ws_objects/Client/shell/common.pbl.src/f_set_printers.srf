$PBExportHeader$f_set_printers.srf
global type f_set_printers from function_object
end type

forward prototypes
global function integer f_set_printers ()
end prototypes

global function integer f_set_printers ();string ls_temp
u_ds_data luo_data
integer li_count
integer li_printer_count
integer i, j
string ls_printers
string lsa_printers[]
string ls_find
long ll_row
integer li_sts
str_printer lstr_printer
string ls_printer
string ls_default_printer


// Make sure the printer list is current for this computer
li_sts = RegistryGet("HKEY_CURRENT_USER\Software\Microsoft\Windows NT\CurrentVersion\Windows", "Device", RegString!, ls_default_printer)
if li_sts > 0 and not isnull(ls_default_printer) and trim(ls_default_printer) <> "" then
	ls_printers = PrintGetPrinters()
else
	ls_printers = ""
end if
li_printer_count = f_parse_string(ls_printers, "~r~n", lsa_printers)

luo_data = CREATE u_ds_data
luo_data.set_dataobject("dw_o_computer_printer")
li_count = luo_data.retrieve(computer_id)
if li_count < 0 then return -1

for i = 1 to li_printer_count
	lstr_printer = f_parse_printer(lsa_printers[i])
	common_thread.add_printer(lstr_printer)
	ls_find = "printer='" + lstr_printer.printername + "'"
	ll_row = luo_data.find(ls_find, 1, li_count)
	if ll_row <= 0 then
		ll_row = luo_data.insertrow(0)
		luo_data.object.computer_id[ll_row] = computer_id
		luo_data.object.printer[ll_row] = lstr_printer.printername
	end if
	luo_data.object.driver[ll_row] = lstr_printer.driver
	luo_data.object.port[ll_row] = lstr_printer.port
	luo_data.object.last_discovered[ll_row] = datetime(today(), now())
	luo_data.object.found[ll_row] = 1
next

// Remove any printers which are no longer valid
ls_find = "found=0"
ll_row = luo_data.find(ls_find, 1, li_count)
DO WHILE ll_row > 0 and ll_row <= li_count
	luo_data.deleterow(ll_row)
	li_count -= 1
	ll_row = luo_data.find(ls_find, ll_row, li_count + 1)
LOOP

// Save the changes
li_sts = luo_data.update()
if li_sts < 0 then return -1

if cpr_mode = "SERVER" then
	sqlca.jmj_set_server_printers(computer_id)
	if not tf_check() then return -1
end if


return 1


end function

