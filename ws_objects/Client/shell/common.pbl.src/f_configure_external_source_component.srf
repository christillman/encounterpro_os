$PBExportHeader$f_configure_external_source_component.srf
global type f_configure_external_source_component from function_object
end type

forward prototypes
global function integer f_configure_external_source_component (string ps_external_source)
end prototypes

global function integer f_configure_external_source_component (string ps_external_source);string ls_component_id
str_attributes lstr_attributes
integer li_sts
u_ds_data luo_data
integer li_count
integer i
integer li_attribute_sequence
string ls_id
str_attributes lstr_state_attributes
string ls_context_object
string ls_external_source_type


SELECT CAST(c.id AS varchar(38)), s.external_source_type, s.context_object
INTO :ls_id, :ls_external_source_type, :ls_context_object
FROM c_External_Source s
	INNER JOIN (SELECT component_id, description, id FROM dbo.fn_components()) c
	ON s.component_id = c.component_id
WHERE s.external_source = :ps_external_source;
If Not tf_check() Then Return -1
If sqlca.sqlcode = 100 then
	openwithparm(w_pop_message, "f_configure_external_source_component()", "The component for this external_source is not valid")
	log.log(po_null, "f_configure_external_source_component.0023", "The external_source component for this external_source is not valid (" + ps_external_source + ")", 4)
end if

// Get the existing attributes
luo_data = CREATE u_ds_data
luo_data.set_dataobject("dw_c_external_source_component_attribute")
li_count = luo_data.retrieve(ps_external_source)

if li_count < 0 then
	log.log(po_null, "f_configure_external_source_component.0032", "Error getting external_source component attributes", 4)
	return -1
end if

f_attribute_ds_to_str(luo_data, lstr_attributes)

// Add the config object to the state attributes
f_attribute_add_attribute(lstr_state_attributes, "context_object", ls_context_object)
f_attribute_add_attribute(lstr_state_attributes, "parent_config_object_id", ps_external_source)

li_sts = f_get_params_with_state(ls_id, "Config", lstr_attributes, lstr_state_attributes)
if li_sts < 0 then return -1

// Add/replace the new attributes, removing any attributes no longer referenced
f_attribute_str_to_ds_with_removal(lstr_attributes, luo_data)

// For any new records, add the key values
for i = 1 to luo_data.rowcount()
	if isnull(long(luo_data.object.external_source_id[i])) then
		luo_data.object.external_source_id[i] = ps_external_source
		luo_data.object.component_attribute[i] = "Y"
	end if
next

// Update the attributes
li_sts = luo_data.update()
DESTROY luo_data
if li_sts < 0 then
	log.log(po_null, "f_configure_external_source_component.0060", "Error updating command attributes", 4)
	return -1
end if


return 1


end function

