$PBExportHeader$f_config_object_revert_version.srf
global type f_config_object_revert_version from function_object
end type

forward prototypes
global function integer f_config_object_revert_version (string ps_config_object_id, boolean pb_show_beta)
end prototypes

global function integer f_config_object_revert_version (string ps_config_object_id, boolean pb_show_beta);str_popup popup
str_popup_return popup_return
long ll_version
str_config_object_info lstr_config_object
integer li_sts

li_sts = f_get_config_object_info(ps_config_object_id, lstr_config_object)
if li_sts <= 0 then
	log.log(po_null, "f_config_object_revert_version()", "Error getting config object info (" + ps_config_object_id + ")", 4)
	return -1
end if

ll_version = f_config_object_pick_version(ps_config_object_id, pb_show_beta, "Revert")
if isnull(ll_version) then return 0
if ll_version < 0 then
	openwithparm(w_pop_message, "There are no earlier versions available")
	return 0
end if

openwithparm(w_pop_yes_no, "Are you sure you want to revert this " + lstr_config_object.config_object_type + " back to version # " + string(ll_version) + "?")
popup_return = message.powerobjectparm
if popup_return.item <> "YES" then return 0

li_sts = f_config_object_install(ps_config_object_id, ll_version)
if li_sts < 0 then
	log.log(po_null, "f_config_object_revert_version()", "Error installing config object version (" + ps_config_object_id + ", " + string(ll_version) + ")", 4)
	return -1
end if
if li_sts = 0 then return 0


return 1

end function

