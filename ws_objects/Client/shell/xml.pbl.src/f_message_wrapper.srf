$PBExportHeader$f_message_wrapper.srf
global type f_message_wrapper from function_object
end type

forward prototypes
global function pbdom_document f_message_wrapper (string ps_document_type, long pl_addressee, string ps_sendermessageid, string ps_sender_user_id, string ps_recipient_user_id)
end prototypes

global function pbdom_document f_message_wrapper (string ps_document_type, long pl_addressee, string ps_sendermessageid, string ps_sender_user_id, string ps_recipient_user_id);integer li_sts
PBDOM_Element lo_root
PBDOM_Element lo_element_from
PBDOM_Element lo_element_to
PBDOM_Element lo_element
PBDOM_Document lo_document
PBDOM_Document lo_null

setnull(lo_null)

if isnull(ps_document_type) then
	log.log(this, "f_message_wrapper()", "Null document type", 4)
	return lo_null
end if

if isnull(pl_addressee) then
	log.log(this, "f_message_wrapper()", "Null addressee", 4)
	return lo_null
end if

TRY
	lo_document = CREATE PBDOM_Document
	lo_document.newdocument("JMJMessage")

	lo_root = CREATE PBDOM_Element
	lo_root.setname("JMJMessage")
	
	
	lo_element_from = f_message_wrapper_from(sqlca.customer_id, ps_sender_user_id)
	lo_root.addcontent(lo_element_from)
	
	lo_element_to = f_message_wrapper_to(pl_addressee, ps_recipient_user_id)
	lo_root.addcontent(lo_element_to)
	
	if len(ps_SenderMessageID) > 0 then
		lo_element = CREATE PBDOM_Element
		lo_element.setname("SenderMessageID")
		lo_element.addcontent(ps_SenderMessageID)
		lo_root.addcontent(lo_element)
	end if
	
	lo_element = CREATE PBDOM_Element
	lo_element.setname("OwnerID")
	lo_element.addcontent(string(pl_addressee))
	lo_root.addcontent(lo_element)
	
	lo_element = CREATE PBDOM_Element
	lo_element.setname("DocumentType")
	lo_element.addcontent(ps_document_type)
	lo_root.addcontent(lo_element)
	
	lo_document.setrootelement(lo_root)
CATCH (throwable lo_error)
	log.log(this, "f_message_wrapper()", "Error creating wrapper (" + lo_error.text + ")", 4)
	return lo_null
END TRY

Return lo_document

end function

