$PBExportHeader$f_get_context_menu_edit.srf
global type f_get_context_menu_edit from function_object
end type

forward prototypes
global function long f_get_context_menu_edit (string ps_menu_context, string ps_menu_key, string ps_menu_key2)
global function long f_get_context_menu_edit (str_menu_context pstr_menu_context)
end prototypes

global function long f_get_context_menu_edit (string ps_menu_context, string ps_menu_key, string ps_menu_key2);u_ds_data luo_data
long ll_count
long i
string ls_office_id
string ls_menu_key
string ls_user_id
integer li_sts
long ll_menu_id
long ll_null

setnull(ll_null)


luo_data = CREATE u_ds_data
luo_data.set_dataobject("dw_o_menu_selection")
ll_count = luo_data.retrieve(ps_menu_context)

for i = 1 to ll_count
	ls_office_id = luo_data.object.office_id[i]
	ls_menu_key = luo_data.object.menu_key[i]
	ls_user_id = luo_data.object.user_id[i]
	
	// Make sure the office_id matches
	if not isnull(ls_office_id) and ls_office_id <> gnv_app.office_id then continue
	
	// Make sure the menu_key matches; for room menus (check for specific room id or room type).
	if not isnull(ls_menu_key) then
		if (isnull(ps_menu_key) or lower(ls_menu_key) <> lower(ps_menu_key)) &
		 and (isnull(ps_menu_key2) or lower(ls_menu_key) <> lower(ps_menu_key2)) then continue
	end if
	
	// Make sure the user_id matches
	if not isnull(ls_user_id) then
		if ls_user_id <> current_user.user_id and (isnull(current_user.specialty_id) or lower(ls_user_id) <> lower(current_user.specialty_id)) then continue
	end if
	
	ll_menu_id = luo_data.object.menu_id[i]
	
	DESTROY luo_data
	
	return ll_menu_id
next

DESTROY luo_data

return ll_null




end function

global function long f_get_context_menu_edit (str_menu_context pstr_menu_context);u_ds_data luo_data
long ll_count
long i
string ls_office_id
string ls_menu_key
string ls_user_id
integer li_sts
long ll_menu_id
long ll_null
string ls_null
w_window_base lw_window
str_popup_return popup_return

setnull(ll_null)
setnull(ls_null)

if trim(pstr_menu_context.menu_key) = "" then
	setnull(pstr_menu_context.menu_key)
end if

if trim(pstr_menu_context.menu_key2) = "" then
	setnull(pstr_menu_context.menu_key2)
end if

if config_mode and keydown(keycontrol!) then
	openwithparm(lw_window, pstr_menu_context, "w_menu_selection")
	return ll_null
end if

luo_data = CREATE u_ds_data
luo_data.set_dataobject("dw_o_menu_selection")
ll_count = luo_data.retrieve(pstr_menu_context.menu_context)

for i = 1 to ll_count
	ls_office_id = luo_data.object.office_id[i]
	ls_menu_key = luo_data.object.menu_key[i]
	ls_user_id = luo_data.object.user_id[i]
	
	// Make sure the office_id matches
	if not isnull(ls_office_id) and ls_office_id <> gnv_app.office_id then continue
	
	// Make sure the menu_key matches; for room menus (check for specific room id or room type).
	if not isnull(ls_menu_key) then
		if (isnull(pstr_menu_context.menu_key) or lower(ls_menu_key) <> lower(pstr_menu_context.menu_key)) &
		 and (isnull(pstr_menu_context.menu_key2) or lower(ls_menu_key) <> lower(pstr_menu_context.menu_key2)) then continue
	end if
	
	// Make sure the user_id matches
	if not isnull(ls_user_id) then
		if ls_user_id <> current_user.user_id and (isnull(current_user.specialty_id) or lower(ls_user_id) <> lower(current_user.specialty_id)) then continue
	end if
	
	ll_menu_id = luo_data.object.menu_id[i]
	
	DESTROY luo_data
	
	return ll_menu_id
next

DESTROY luo_data

if config_mode and pstr_menu_context.configure_if_null then
	openwithparm(w_pop_yes_no, "There is no menu for this context.  Do you wish to select or create one now?")
	popup_return = message.powerobjectparm
	if popup_return.item <> "YES" then return ll_null
	
	if isnull(pstr_menu_context.context_object) or trim(pstr_menu_context.context_object) = "" then
		if isnull(current_service) then
			pstr_menu_context.context_object = "General"
		else
			pstr_menu_context.context_object = current_service.context_object
		end if
	end if
	
	openwithparm(lw_window, pstr_menu_context.context_object, "w_pick_menu")
	popup_return = message.powerobjectparm
	if popup_return.item_count <> 1 then return 0
	
	ll_menu_id = long(popup_return.items[1])
	
	sqlca.jmj_new_menu_selection(ll_menu_id, ls_null, pstr_menu_context.menu_context, pstr_menu_context.menu_key, ls_null)
	if not tf_check() then return ll_null

	return ll_menu_id
end if


return ll_null




end function

