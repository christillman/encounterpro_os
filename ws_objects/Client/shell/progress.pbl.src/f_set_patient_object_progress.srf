$PBExportHeader$f_set_patient_object_progress.srf
global type f_set_patient_object_progress from function_object
end type

forward prototypes
global function integer f_set_patient_object_progress (string ps_cpr_id, string ps_context_object, long pl_object_key, string ps_progress_type, string ps_progress_key, string ps_progress, datetime pdt_progress_date_time, long pl_risk_level, long pl_attachment_id, long pl_patient_workplan_item_id, integer pi_diagnosis_sequence, string ps_severity, string ps_user_id)
global function integer f_set_patient_object_progress (string ps_cpr_id, string ps_context_object, long pl_object_key, string ps_progress_type, string ps_progress_key, string ps_progress, datetime pdt_progress_date_time, long pl_risk_level, long pl_attachment_id, long pl_patient_workplan_item_id, integer pi_diagnosis_sequence, string ps_severity, string ps_user_id, boolean pb_reload_patient)
end prototypes

global function integer f_set_patient_object_progress (string ps_cpr_id, string ps_context_object, long pl_object_key, string ps_progress_type, string ps_progress_key, string ps_progress, datetime pdt_progress_date_time, long pl_risk_level, long pl_attachment_id, long pl_patient_workplan_item_id, integer pi_diagnosis_sequence, string ps_severity, string ps_user_id);long ll_encounter_id
integer li_sts
string ls_observation_id
long ll_treatment_id

// This version of f_set_progress is only for assessments which need to include the diagnosis_sequence and the severity.
// At some point all of the progress calls will be unified and f_set_progress and f_set_progress2 will merge into a single
// function

setnull(ls_observation_id)  // Set it null and the stored procedure will look it up
setnull(ll_treatment_id)  // Set it null and the stored procedure will look it up
setnull(ll_encounter_id)
if not isnull(current_service) then
	ll_encounter_id = current_service.encounter_id
end if

if trim(ps_progress) = "" then setnull(ps_progress)

if isnull(ps_user_id) then
	ps_user_id = current_user.user_id
end if

CHOOSE CASE lower(ps_context_object)
	CASE "patient"
		sqlca.sp_set_patient_progress(ps_cpr_id, &
												ll_encounter_id, &
												pl_attachment_id, &
												ps_progress_type, &
												ps_progress_key, &
												ps_progress, &
												pdt_progress_date_time, &
												pl_patient_workplan_item_id, &
												pl_risk_level, &
												ps_user_id, &
												current_scribe.user_id )
		if not tf_check() then return -1
	CASE "encounter"
		sqlca.sp_set_encounter_progress( ps_cpr_id, &
													pl_object_key, &
													pl_attachment_id, &
													ps_progress_type, &
													ps_progress_key, &
													ps_progress, &
													pdt_progress_date_time, &
													pl_patient_workplan_item_id, &
													pl_risk_level, &
													ps_user_id, &
													current_scribe.user_id)
		if not tf_check() then return -1
	CASE "assessment"
		sqlca.sp_set_assessment_progress(ps_cpr_id, &
													pl_object_key, &
													ll_encounter_id, &
													pdt_progress_date_time, &
													pi_diagnosis_sequence, &  
													ps_progress_type, &  
													ps_progress_key, &  
													ps_progress, &  
													ps_severity, &  
													pl_attachment_id, &
													pl_patient_workplan_item_id, &
													pl_risk_level, &  
													ps_user_id, &  
													current_scribe.user_id)
		if not tf_check() then return -1
	CASE "treatment"
		sqlca.sp_set_treatment_progress( ps_cpr_id, &
													pl_object_key, &
													ll_encounter_id, &
													ps_progress_type, &
													ps_progress_key, &
													ps_progress, &
													pdt_progress_date_time, &
													pl_patient_workplan_item_id, &
													pl_risk_level, &
													pl_attachment_id, &
													ps_user_id, &
													current_scribe.user_id)
		if not tf_check() then return -1
	CASE "attachment"
		sqlca.sp_Set_Attachment_Progress(ps_cpr_id, &
													pl_object_key, &
													pl_patient_workplan_item_id, &
													current_user.user_id, &
													pdt_progress_date_time, &
													ps_progress_type, &
													ps_progress, &
													current_scribe.user_id)
		if not tf_check() then return -1
	CASE "observation"
		sqlca.sp_set_observation_comment(ps_cpr_id, &
													pl_object_key, &
													ls_observation_id, &
													ps_progress_type, &
													ps_progress_key, &
													pdt_progress_date_time, &
													ps_progress, &
													ps_severity, &
													pl_risk_level, &
													ll_treatment_id, &
													ll_encounter_id, &
													pl_attachment_id, &
													ps_user_id, &
													current_scribe.user_id)
if not tf_check() then return -1
END CHOOSE

if not isnull(current_patient) then
	li_sts = current_patient.load_patient()
	if li_sts < 0 then return -1
end if

return 1




end function

global function integer f_set_patient_object_progress (string ps_cpr_id, string ps_context_object, long pl_object_key, string ps_progress_type, string ps_progress_key, string ps_progress, datetime pdt_progress_date_time, long pl_risk_level, long pl_attachment_id, long pl_patient_workplan_item_id, integer pi_diagnosis_sequence, string ps_severity, string ps_user_id, boolean pb_reload_patient);long ll_encounter_id
integer li_sts
string ls_observation_id
long ll_treatment_id

setnull(ls_observation_id)  // Set it null and the stored procedure will look it up
setnull(ll_treatment_id)  // Set it null and the stored procedure will look it up
setnull(ll_encounter_id)
if not isnull(current_service) then
	ll_encounter_id = current_service.encounter_id
end if

if trim(ps_progress) = "" then setnull(ps_progress)

if isnull(ps_user_id) then
	ps_user_id = current_user.user_id
end if

CHOOSE CASE lower(ps_context_object)
	CASE "patient"
		sqlca.sp_set_patient_progress(ps_cpr_id, &
												ll_encounter_id, &
												pl_attachment_id, &
												ps_progress_type, &
												ps_progress_key, &
												ps_progress, &
												pdt_progress_date_time, &
												pl_patient_workplan_item_id, &
												pl_risk_level, &
												ps_user_id, &
												current_scribe.user_id )
		if not tf_check() then return -1
	CASE "encounter"
		sqlca.sp_set_encounter_progress( ps_cpr_id, &
													pl_object_key, &
													pl_attachment_id, &
													ps_progress_type, &
													ps_progress_key, &
													ps_progress, &
													pdt_progress_date_time, &
													pl_patient_workplan_item_id, &
													pl_risk_level, &
													ps_user_id, &
													current_scribe.user_id)
		if not tf_check() then return -1
	CASE "assessment"
		sqlca.sp_set_assessment_progress(ps_cpr_id, &
													pl_object_key, &
													ll_encounter_id, &
													pdt_progress_date_time, &
													pi_diagnosis_sequence, &  
													ps_progress_type, &  
													ps_progress_key, &  
													ps_progress, &  
													ps_severity, &  
													pl_attachment_id, &
													pl_patient_workplan_item_id, &
													pl_risk_level, &  
													ps_user_id, &  
													current_scribe.user_id)
		if not tf_check() then return -1
	CASE "treatment"
		sqlca.sp_set_treatment_progress( ps_cpr_id, &
													pl_object_key, &
													ll_encounter_id, &
													ps_progress_type, &
													ps_progress_key, &
													ps_progress, &
													pdt_progress_date_time, &
													pl_patient_workplan_item_id, &
													pl_risk_level, &
													pl_attachment_id, &
													ps_user_id, &
													current_scribe.user_id)
		if not tf_check() then return -1
	CASE "attachment"
		sqlca.sp_Set_Attachment_Progress(ps_cpr_id, &
													pl_object_key, &
													pl_patient_workplan_item_id, &
													current_user.user_id, &
													pdt_progress_date_time, &
													ps_progress_type, &
													ps_progress, &
													current_scribe.user_id)
		if not tf_check() then return -1
	CASE "observation"
		sqlca.sp_set_observation_comment(ps_cpr_id, &
													pl_object_key, &
													ls_observation_id, &
													ps_progress_type, &
													ps_progress_key, &
													pdt_progress_date_time, &
													ps_progress, &
													ps_severity, &
													pl_risk_level, &
													ll_treatment_id, &
													ll_encounter_id, &
													pl_attachment_id, &
													ps_user_id, &
													current_scribe.user_id)
if not tf_check() then return -1
END CHOOSE

if not isnull(current_patient) and pb_reload_patient then
	li_sts = current_patient.load_patient()
	if li_sts < 0 then return -1
end if

return 1




end function

