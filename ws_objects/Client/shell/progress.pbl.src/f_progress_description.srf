$PBExportHeader$f_progress_description.srf
global type f_progress_description from function_object
end type

forward prototypes
global subroutine f_progress_description (ref str_progress pstr_progress)
end prototypes

global subroutine f_progress_description (ref str_progress pstr_progress);integer li_sts
string ls_null
string ls_description
str_drug_definition lstr_drug
string ls_amount
string ls_unit
u_unit luo_unit
string ls_temp
string ls_temp1
string ls_temp2
long ll_index
string ls_object

setnull(ls_null)

// Make the progress type pretty
pstr_progress.progress_type = wordcap(lower(pstr_progress.progress_type))

// Copy the key and progress into the description columns
pstr_progress.progress_key_description = pstr_progress.progress_key
pstr_progress.progress_note_description = pstr_progress.progress

// If we have a progress object, then we need to interpret the progress_key
ls_object = pstr_progress.progress_type_properties.progress_key_object
if not isnull(ls_object) and trim(ls_object) <> "" then
	// First translate the progress key if there's an associated object
	ls_description = sqlca.fn_object_description(ls_object, pstr_progress.progress_key)
	if not isnull(ls_description) then pstr_progress.progress_key_description = ls_description
	
	// Then, translate the progress field, if necessary
	CHOOSE CASE upper(ls_object)
		CASE "DRUG"
			// If we have a pstr_progress.progress, interpret it as an amount and a unit
			// seperated by a space.
			if not isnull(pstr_progress.progress) then
				f_split_string(pstr_progress.progress_note_description, " ", ls_amount, ls_unit)
				luo_unit = unit_list.find_unit(ls_unit)
				if not isnull(luo_unit) then
					ls_temp = luo_unit.pretty_amount_unit(ls_amount)
					if not isnull(ls_temp) then pstr_progress.progress_note_description = ls_temp
				end if
			end if
	END CHOOSE
end if

// Now populate the progress_full_description
if isnull(pstr_progress.progress_key_description) then
	pstr_progress.progress_full_description = pstr_progress.progress_note_description
else
	pstr_progress.progress_full_description = pstr_progress.progress_key_description
	if len(pstr_progress.progress_note_description) > 0 then
		pstr_progress.progress_full_description += " " + pstr_progress.progress_note_description
	end if
end if

end subroutine

