$PBExportHeader$f_display_help_article.srf
global type f_display_help_article from function_object
end type

forward prototypes
global function str_help_article f_display_help_article (string ps_help_context, string ps_which_help)
end prototypes

global function str_help_article f_display_help_article (string ps_help_context, string ps_which_help);long ll_count
str_help_article lstr_article

lstr_article.help_context = left(ps_help_context, 80)

// Determine the article name
if ps_which_help = "USER" then
	lstr_article.epro_domain = "HelpArticleName"
	lstr_article.which_help = "USER"
else
	lstr_article.epro_domain = "ConfigArticleName"
	lstr_article.which_help = "CONFIG"
end if

if len(ps_help_context) > 0 And IsValid(datalist) then
	lstr_article.article = datalist.xml_lookup_epro_id(0, "EproHelpContext", ps_help_context, ps_help_context, lstr_article.epro_domain)
end if

// If we trying to edit or if there isn't an article yet
lstr_article.user_may_edit = false
// validate that user can edit/map
if sqlca.customer_id < 1000 then
	//if lower(gnv_app.computername) = "testingv5" or lower(computername) = "dev-mc" then
	// check if permission to edit help (mark and beth)
		SELECT count(*)
		INTO :ll_count
		FROM c_Domain
		WHERE domain_id = 'Help Edit User'
		AND domain_item = :gnv_app.windows_logon_id;
		if tf_check() and ll_count > 0 then
			lstr_article.user_may_edit = true
		end if
	//end if
end if

return lstr_article

end function

