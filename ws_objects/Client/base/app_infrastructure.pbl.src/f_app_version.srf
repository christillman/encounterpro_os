$PBExportHeader$f_app_version.srf
global type f_app_version from function_object
end type

forward prototypes
global function string f_app_version ()
end prototypes

global function string f_app_version ();//return string(major_release) + "." + database_version + "." + build + " (" + string(compile_date, "[shortdate]") + ")"
integer li_sts
string ls_compinfo
boolean lb_sts
string ls_ProductVersion
string ls_product

ls_compinfo = common_thread.epcompinfo

if upper(gnv_app.cpr_mode) = "CLIENT" then
	ls_product = "PB Client"
elseif upper(gnv_app.cpr_mode) = "ISSUES" then
	ls_product = "Issues"
elseif upper(gnv_app.cpr_mode) = "SERVER" or upper(gnv_app.cpr_mode) = "DBMAINT" then
	ls_product = "PB Server"
end if

ls_ProductVersion = profilestring(ls_compinfo, ls_product, "ProductVersion", "")

// If we couldn't determine the Client or Server version, then just show the
// PowerBuilder version from the application object
if isnull(ls_ProductVersion) or trim(ls_ProductVersion) = "" then
	ls_ProductVersion = ls_product + " " + string(gnv_app.major_release) + "." &
							+ gnv_app.database_version + "." &
							+ gnv_app.build + " (" + string(gnv_app.compile_date, "[shortdate]") + ")"
end if

return ls_ProductVersion

end function

