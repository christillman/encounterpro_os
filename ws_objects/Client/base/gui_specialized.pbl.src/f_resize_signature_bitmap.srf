$PBExportHeader$f_resize_signature_bitmap.srf
global type f_resize_signature_bitmap from function_object
end type

forward prototypes
global function string f_resize_signature_bitmap (string ps_file, long pl_width, long pl_height, integer pi_luminancecutoff)
end prototypes

global function string f_resize_signature_bitmap (string ps_file, long pl_width, long pl_height, integer pi_luminancecutoff);Integer	 li_sts
string ls_resized_file

if isnull(pi_luminanceCutoff) or pi_luminanceCutoff <= 0 or pi_luminanceCutoff > 255 then pi_luminanceCutoff = 245

if pl_width > 0 and pl_height > 0 then
		
	If IsValid(common_thread.imageutils) THEN
		ls_resized_file = f_temp_file(".bmp")
		TRY
			li_sts = common_thread.imageutils.of_resizedarkenbitmap(ps_file, ls_resized_file, pl_width, pl_height, pi_luminanceCutoff)
			if li_sts <= 0 then
				log.log(po_null, "f_resize_signature_bitmap:0013", "Error reducing bitmap (" + string(li_sts) + ")", 3)
				ls_resized_file = ps_file
			end if
		CATCH (throwable lo_error)
			log.log(po_null, "f_resize_signature_bitmap:0017", "Error calling of_ResizeDarkenBitmap (" + lo_error.text + ")", 3)
			ls_resized_file = ps_file
		END TRY
	Else
		log.log(po_null, "f_resize_signature_bitmap:0021", "common_thread.imageutils not valid", 3)
		ls_resized_file = ps_file
	End If

else
	ls_resized_file = ps_file
end if


Return ls_resized_file


end function

