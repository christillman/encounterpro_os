$PBExportHeader$f_get_picture_dimensions.srf
global type f_get_picture_dimensions from function_object
end type

forward prototypes
global subroutine f_get_picture_dimensions (string ps_picture, ref long pl_inches_x, ref long pl_inches_y)
end prototypes

global subroutine f_get_picture_dimensions (string ps_picture, ref long pl_inches_x, ref long pl_inches_y);
// Returns the width and height of the image in 1000ths of an inch
//

integer li_sts
long ll_screen_resolution_x
long ll_screen_resolution_y
long ll_pixels_x
long ll_pixels_y
long ll_hresolution
long ll_vresolution

ll_screen_resolution_x = common_thread.screen_resolution_x()
ll_screen_resolution_y = common_thread.screen_resolution_y()

If IsValid(common_thread.imageutils) THEN
	TRY
		common_thread.imageutils.of_GetImageInfo(ps_picture, ref ll_pixels_x, ref ll_pixels_y, ref ll_hresolution, ref ll_vresolution)
	CATCH (throwable lo_error)
		log.log(po_null, "f_get_picture_dimensions:0020", "Error calling of_GetImageInfo (" + lo_error.text + ")", 3)
	END TRY
Else
	log.log(po_null, "f_get_picture_dimensions:0023", "common_thread.imageutils not valid", 3)
End If

pl_inches_x = (1000 * ll_pixels_x) / ll_screen_resolution_x
pl_inches_y = (1000 * ll_pixels_y) / ll_screen_resolution_y

return




end subroutine

