$PBExportHeader$f_pick_actor_communication.srf
global type f_pick_actor_communication from function_object
end type

forward prototypes
global function integer f_pick_actor_communication (string ps_user_id, string ps_communication_type, ref str_actor_communication pstr_actor_communication)
end prototypes

global function integer f_pick_actor_communication (string ps_user_id, string ps_communication_type, ref str_actor_communication pstr_actor_communication);integer li_sts
str_popup popup
str_popup_return popup_return
string ls_communication_value
long ll_communication_sequence

popup.dataobject = "dw_c_actor_communication_pick"
popup.datacolumn = 2
popup.displaycolumn = 4
popup.auto_singleton = true
popup.argument_count = 2
popup.argument[1] = ps_user_id
popup.argument[2] = ps_communication_type
openwithparm(w_pop_pick, popup)
popup_return = message.powerobjectparm
if popup_return.item_count <> 1 then return 0

ll_communication_sequence = long(popup_return.items[1])

SELECT	a.actor_id,
			a.communication_sequence,
			a.communication_type,
			a.communication_name,
			a.communication_value,
			a.note,
			a.sort_sequence,
			a.status,
			a.created,
			a.created_by
INTO	:pstr_actor_communication.actor_id,
		:pstr_actor_communication.communication_sequence,
		:pstr_actor_communication.communication_type,
		:pstr_actor_communication.communication_name,
		:pstr_actor_communication.communication_value,
		:pstr_actor_communication.note,
		:pstr_actor_communication.sort_sequence,
		:pstr_actor_communication.status,
		:pstr_actor_communication.created,
		:pstr_actor_communication.created_by
FROM c_User u
	INNER JOIN c_Actor_Communication a
	ON u.actor_id = a.actor_id
WHERE u.user_id = :ps_user_id
AND a.communication_sequence = :ll_communication_sequence;
if not tf_check() then return -1
if sqlca.sqlcode = 100 then return 100


return 1


end function

