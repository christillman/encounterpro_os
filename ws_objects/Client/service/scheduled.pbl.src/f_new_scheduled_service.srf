$PBExportHeader$f_new_scheduled_service.srf
global type f_new_scheduled_service from function_object
end type

forward prototypes
global function long f_new_scheduled_service (string ps_parent_object_id)
end prototypes

global function long f_new_scheduled_service (string ps_parent_object_id);integer li_sts
string ls_context_object
str_popup			popup
str_popup_return popup_return
string ls_service
string ls_service_description
long ll_service_sequence

ls_context_object = "General"

popup.title = "Select Task to Schedule"
popup.dataobject = "dw_sp_compatible_services"
popup.datacolumn = 1
popup.displaycolumn = 2
popup.argument_count = 1
popup.argument[1] = ls_context_object
openwithparm(w_pop_pick, popup)
popup_return = message.powerobjectparm
if popup_return.item_count <> 1 then return 0

ls_service = popup_return.items[1]
ls_service_description = popup_return.descriptions[1]

INSERT INTO o_Service_Schedule (
	user_id,
	service,
	schedule_type,
	schedule_interval,
	created_by,
	status,
	parent_component,
	description)
VALUES (
	'#JMJ',
	:ls_service,
	'Daily',
	'00:00',
	:current_scribe.user_id,
	'NA',
	:ps_parent_object_id,
	:ls_service_description);
if not tf_check() then return -1

SELECT SCOPE_IDENTITY()
INTO :ll_service_sequence
FROM c_1_record;
if not tf_check() then return -1

return ll_service_sequence


end function

